        # p = Pool(10)
        # # Current terms which will be used for multiple times
        # irel = p.apply_async(self.i_rel, args = (c, s, ip, r))
        # ileak = p.apply_async(self.i_leak, args = (c, s))
        # iserca = p.apply_async(self.i_serca, args = (c, ))
        # iin = p.apply_async(self.i_in, args = (ip, ))
        # ipmca = p.apply_async(self.i_pmca, args = (c, ))
        # iout = p.apply_async(self.i_out, args = (c, ))
        # ical = p.apply_async(self.i_cal, args = (v, n, hv, hc))
        # icat = p.apply_async(self.i_cat, args = (v, bx, cx))
        # iplcb_stim = p.apply_async(self.i_plcb, args = (ip_stim, ))
        # iplcb_rest = p.apply_async(self.i_plcb, args = (self.v8, ))
        # ir1 = p.apply_async(self.r_1, args = (c, g, c1g))
        # ir2 = p.apply_async(self.r_2, args = (c, c1g, c2g))
        # ir3 = p.apply_async(self.r_3, args = (c, c2g, c3g))
        # ir4 = p.apply_async(self.r_4, args = (c, c3g, c4g))
        # p.close()
        # p.join()

        # irel = irel.get()
        # ileak = ileak.get()
        # iserca = iserca.get()
        # iin = iin.get()
        # ipmca = ipmca.get()
        # iout = iout.get()
        # ical = ical.get()
        # icat = icat.get()
        # iplcb_stim = iplcb_stim.get()
        # iplcb_rest = iplcb_rest.get()
        # ir1 = ir1.get()
        # ir2 = ir2.get()
        # ir3 = ir3.get()
        # ir4 = ir4.get()
